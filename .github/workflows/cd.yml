name: Briefcase CD
on:
  push:
    branches: [ main ]
    paths:
      - 'server/**'
      - 'client/**'
      - 'docker-compose.yml'

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Build and push server
        uses: docker/build-push-action@v5
        with:
          context: ./server
          file: ./server/Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/briefcase-server:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/briefcase-server:${{ github.sha }}
      
      - name: Build and push client
        uses: docker/build-push-action@v5
        with:
          context: ./client
          file: ./client/Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/briefcase-client:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/briefcase-client:${{ github.sha }}

  deploy-production:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Deploy to production
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.PRODUCTION_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd /opt/briefcase
            docker-compose pull
            docker-compose down
            docker-compose up -d --remove-orphans
            docker system prune -f
      
      - name: Run health check
        run: |
          curl --retry 10 --retry-delay 5 --retry-connrefused \
          http://${{ secrets.PRODUCTION_HOST }}:3001/health

  vercel-deploy:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Install Vercel CLI
        run: npm install -g vercel@32
      
      - name: Deploy to Vercel
        run: vercel deploy --prod --token ${{ secrets.VERCEL_TOKEN }}
        env:
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}